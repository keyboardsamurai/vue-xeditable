{"version":3,"file":"vue-xeditable.umd.js","sources":["../src/components/XCustomSelect.vue","../src/components/XEditable.vue","../src/main.js"],"sourcesContent":["<template class=\"custom-select\">\n  <select\n    :value=\"value\"\n    @change=\"onChange($event.target.value)\"\n    ref=\"$_VueXeditable_Select\"\n  >\n    <option\n      v-for=\"option in options\"\n      :key=\"option\"\n      :value=\"option\"\n      :selected=\"isSelected(option)\"\n      ref=\"options\"\n    >\n      {{ option }}\n    </option>\n  </select>\n</template>\n\n<script>\n  export default {\n    template: '#custom-select',\n    props: ['value', 'options'],\n    mounted () {\n      this.$refs.$_VueXeditable_Select.addEventListener('keydown', this.onKeyDown, false)\n    },\n    beforeDestroy () {\n      this.$refs.$_VueXeditable_Select.removeEventListener('keydown', this.onKeyDown, false)\n    },\n    methods: {\n      onChange (newSelection) {\n        this.$emit('input', newSelection) // MUST be called 'input'\n      },\n      isSelected (option) {\n        return option === this.value\n      },\n      onKeyDown (e) {\n        this.$emit('keydown', e)\n      }\n    }\n  }\n</script>\n","<template>\n  <div class='vue-xeditable'>\n    <slot name=\"before\" v-if=\"isRemoteUpdating\"></slot>\n\n    <span\n      class=\"vue-xeditable-value\"\n      :class=\"{'vue-xeditable-empty': $_VueXeditable_isValueEmpty}\"\n      v-show='!isEditing && !isRemoteUpdating'\n      @click='$_VueXeditable_startEditing'\n      v-html='$_VueXeditable_getHTMLValue()'>\n    </span>\n\n    <div\n      v-show='isEditing && !isRemoteUpdating'\n      class='vue-xeditable-control'\n    >\n\n      <input\n        v-if='type === \"text\"'\n        class='vue-form-control'\n        type=\"text\"\n        :value=\"rawValue\"\n        @keydown='$_VueXeditable_onKeydown'\n        ref=\"$_VueXeditable_text\"\n        autofocus\n      >\n\n      <textarea\n        v-else-if='type === \"textarea\"'\n        class='vue-form-control'\n        @keydown='$_VueXeditable_onKeydown'\n        ref=\"$_VueXeditable_textarea\"\n      >\n        {{rawValue}}\n      </textarea>\n\n      <input\n        v-else-if='type === \"number\"'\n        class='vue-form-control'\n        type=\"number\"\n        :value=\"rawValue\"\n        @keydown='$_VueXeditable_onKeydown'\n        ref=\"$_VueXeditable_number\"\n      >\n\n      <x-custom-select\n        v-else-if='type === \"select\"'\n        class='vue-form-control'\n        v-model=\"rawValue\"\n        :options=\"options\"\n        @input='$_VueXeditable_valueDidChange'\n        @keydown=\"$_VueXeditable_onKeydown\"\n        ref=\"$_VueXeditable_select\"\n      >\n      </x-custom-select>\n\n    </div>\n\n    <slot name=\"after\" v-if=\"isRemoteUpdating\"></slot>\n  </div>\n</template>\n\n<script>\n  import Vue from 'vue'\n  import axios from 'axios'\n  import XCustomSelect from './XCustomSelect.vue'\n\n  export default {\n    name: 'vue-xeditable',\n    components: {XCustomSelect},\n    props: {\n      value: {\n        type: [String, Number, Array]\n      },\n      type: {\n        type: String,\n        required: false,\n        default: 'text'\n      },\n      name: {\n        type: String,\n        required: false,\n        default: 'VueXeditable'\n      },\n      empty: {\n        type: String,\n        required: false,\n        default: 'Empty'\n      },\n      placeholder: {\n        type: String,\n        required: false,\n        default: ''\n      },\n      options: {\n        type: Array,\n        default: function () {\n          return []\n        }\n      },\n      remote: {\n        type: Object,\n        required: false,\n        default: function () {\n          return {\n            url: null,\n            method: 'PUT',\n            key: null,\n            resource: null,\n            headers: null\n          }\n        }\n      }\n    },\n    data () {\n      return {\n        isEditing: false,\n        isRemoteUpdating: false,\n        rawValue: this.value\n      }\n    },\n    watch: {\n      value (newValue) {\n        this.rawValue = newValue\n      }\n    },\n    computed: {\n      $_VueXeditable_isValueEmpty () {\n        return this.rawValue === null || this.rawValue === undefined || this.rawValue === ''\n      },\n      $_VueXeditable_hasRemoteUpdate () {\n        return this.remote && this.remote.url && this.remote.url.length && this.remote.key && this.remote.key.length\n      },\n      $_VueXeditable_hasValidRemote () {\n        return this.$_VueXeditable_hasRemoteUpdate && ['PUT', 'POST'].includes(this.remote.method.toUpperCase())\n      }\n    },\n    methods: {\n      $_VueXeditable_getHTMLValue () {\n        if (this.$_VueXeditable_isValueEmpty) {\n          return this.empty\n        }\n        return this.rawValue || '?'\n      },\n      $_VueXeditable_onKeydown (event) {\n        if (!this.isEditing) {\n          return\n        }\n        if (event.keyCode === 13) {\n          this.$_VueXeditable_stopEditing(event)\n          this.$_VueXeditable_valueDidChange(event.target.value)\n        }\n        else if (event.keyCode === 27) {\n          this.$_VueXeditable_stopEditing(event)\n        }\n      },\n      $_VueXeditable_startEditing (event) {\n        this.isEditing = true\n        let that = this\n        that.$emit('start-editing', this.rawValue, this.name)\n        setTimeout(function () {\n          let inputs = Array.from(event.target.nextElementSibling.children)\n          inputs.forEach(i => {\n            i.focus()\n          })\n        }, 100)\n      },\n      $_VueXeditable_stopEditing (event) {\n        this.isEditing = false\n        this.$emit('stop-editing', this.rawValue, this.name)\n      },\n      $_VueXeditable_valueDidChange (newValue) {\n        if (this.type === 'select') {\n          this.$_VueXeditable_stopEditing() // Needed because no events can be associated with select / option?...\n        }\n        if (this.$_VueXeditable_hasValueChanged(newValue) || this.type === 'select') {\n          this.$emit('value-will-change', this.rawValue, this.name)\n\n          if (this.$_VueXeditable_hasRemoteUpdate) {\n            if (this.$_VueXeditable_hasValidRemote) {\n              this.$_VueXeditable_sendRemoteUpdate(newValue)\n                .then(() => {\n                  this.$emit('value-did-change', newValue, this.name)\n                })\n                .catch((error) => {\n                  this.$emit('value-remote-update-error', newValue, error, this.name)\n                })\n            } else {\n              console.error('VueXeditable Error: Invalid Remote Update configuration.')\n            }\n          } else {\n            this.$_VueXeditable_makeLocalUpdate(newValue)\n            this.$emit('value-did-change', newValue, this.name)\n          }\n        }\n      },\n      $_VueXeditable_hasValueChanged (newValue) {\n        return newValue !== this.rawValue\n      },\n      $_VueXeditable_makeLocalUpdate (newValue) {\n        this.rawValue = newValue\n      },\n      $_VueXeditable_sendRemoteUpdate (newValue) {\n        let updateValue = newValue\n\n        let payload = {}\n        if (this.remote.resource && this.remote.resource.length) {\n          let subpayload = {}\n          subpayload[this.remote.key] = updateValue\n          payload[this.remote.resource] = subpayload\n        } else {\n          payload[this.remote.key] = updateValue\n        }\n\n        return new Promise((resolve, reject) => {\n          this.isRemoteUpdating = true\n          axios({\n            method: this.remote.method,\n            url: this.remote.url,\n            headers: this.remote.headers || {},\n            data: payload\n          })\n            .then(response => {\n              this.isRemoteUpdating = false\n              this.$_VueXeditable_makeLocalUpdate(newValue)\n              resolve(newValue)\n            })\n            .catch(error => {\n              this.isRemoteUpdating = false\n              reject(error)\n            })\n        })\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .vue-xeditable {\n    width: auto;\n    color: #222;\n    cursor: pointer;\n    position: relative;\n    display: inline-block;\n  }\n\n  .vue-xeditable:hover {\n    color: #666;\n  }\n\n  .vue-form-control {\n    display: block;\n    width: 100%;\n    padding: 5px;\n    font-size: 14px;\n    line-height: 1.42857143;\n    color: #555;\n    background-color: #fff;\n    background-image: none;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n    outline: none;\n  }\n\n  .vue-xeditable-value {\n    white-space: pre-wrap;\n  }\n\n  .vue-xeditable-empty {\n    color: #ea0002;\n    font-style: italic;\n  }\n\n  .vue-xeditable-control {\n    width: 100%;\n    display: inline-block;\n  }\n\n  .vue-editable-button {\n    display: inline-block;\n    padding: 3px 5px;\n    margin-bottom: 0;\n    font-size: 14px;\n    font-weight: normal;\n    line-height: 1.42857143;\n    text-align: center;\n    white-space: nowrap;\n    vertical-align: middle;\n    cursor: pointer;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    background-image: none;\n    border: 1px solid transparent;\n    border-radius: 4px;\n    font-size: 12px;\n    color: #fff;\n    background: #07c;\n    float: right;\n    margin-top: 10px;\n  }\n</style>\n","import XEditable from './components/XEditable.vue'\n\nlet VueXeditable = {}\n\nVueXeditable.install = function (Vue, options) {\n  Vue.component('VueXeditable', XEditable)\n}\n\nexport default VueXeditable\n\n"],"names":["render","template","props","mounted","this","$refs","$_VueXeditable_Select","addEventListener","onKeyDown","beforeDestroy","removeEventListener","methods","onChange","newSelection","$emit","isSelected","option","value","e","name","components","XCustomSelect","type","String","Number","Array","required","default","empty","placeholder","options","remote","Object","url","method","key","resource","headers","data","isEditing","isRemoteUpdating","rawValue","watch","newValue","computed","$_VueXeditable_isValueEmpty","undefined","$_VueXeditable_hasRemoteUpdate","length","$_VueXeditable_hasValidRemote","includes","toUpperCase","$_VueXeditable_getHTMLValue","$_VueXeditable_onKeydown","event","keyCode","$_VueXeditable_stopEditing","$_VueXeditable_valueDidChange","target","$_VueXeditable_startEditing","setTimeout","from","nextElementSibling","children","forEach","i","focus","$_VueXeditable_hasValueChanged","$_VueXeditable_sendRemoteUpdate","then","catch","error","console","$_VueXeditable_makeLocalUpdate","updateValue","payload","let","subpayload","Promise","resolve","reject","axios","response","VueXeditable","install","Vue","component","XEditable"],"mappings":"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"}